/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;


import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import spotfei.model.Musica;
import spotfei.model.PlayList;
import spotfei.model.Usuario;
import spotfei.dao.UsuarioDAO;
import view.CriarPlaylistView;

import spotfei.model.Musica;

/**
 * Janela para selecionar uma playlist e adicionar uma música a ela.
 * Exibe as playlists do usuário logado e permite adicionar a música selecionada,
 * criar uma nova playlist ou retornar ao menu principal.
 * 
 * @author joaog
 */
public class SelecionarPlaylistView extends javax.swing.JFrame {
    private Musica musicaSelecionada;
    /**
     * Construtor da tela de seleção de playlist.
     * Inicializa os componentes e carrega as playlists do usuário logado.
     * 
     * @param musicaSelecionada música que será adicionada à playlist selecionada
     */
    public SelecionarPlaylistView(Musica musicaSelecionada) {
        initComponents();
        this.musicaSelecionada = musicaSelecionada;
        carregarPlaylists(); 
    }
     /**
     * Carrega as playlists do usuário logado e popula a tabela na interface.
     */
private void carregarPlaylists() {
        Usuario usuarioLogado = Usuario.UsuarioLogado.getUsuarioLogado();
        if (usuarioLogado != null) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); 
            for (PlayList p : usuarioLogado.getPlaylists()) {
                model.addRow(new Object[]{p.getNome()}); 
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Escolha uma playlist:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Playlist"
            }
        ));
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jButton1.setText("Adicionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Criar nova Playlist");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Menu");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton1))))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(25, 25, 25)
                .addComponent(jButton3))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Ação disparada ao clicar no botão "Adicionar".
     * Adiciona a música selecionada à playlist escolhida na tabela.
     * Se nenhuma playlist for selecionada, mostra uma mensagem de erro.
     * Atualiza a lista de playlists no banco via DAO e navega para a tela de playlists.
     * 
     * @param evt evento de ação do botão
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    int linhaSelecionada = jTable1.getSelectedRow(); 

        if (linhaSelecionada != -1) {
            String nomePlaylist = jTable1.getValueAt(linhaSelecionada, 0).toString(); 

            Usuario usuarioLogado = Usuario.UsuarioLogado.getUsuarioLogado();
            if (usuarioLogado != null) {
                for (PlayList p : usuarioLogado.getPlaylists()) {
                    if (p.getNome().equals(nomePlaylist)) {
                        p.adicionarMusica(musicaSelecionada);

                        UsuarioDAO dao = new UsuarioDAO();
                        dao.atualizarPlayLists(usuarioLogado); 

                        JOptionPane.showMessageDialog(this, "Música adicionada à playlist!");
                            PlaylistsView playlistsView = new PlaylistsView();
                            playlistsView.setVisible(true);; 
                        return;
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma playlist.");
        }



    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * Ação disparada ao clicar no botão "Criar nova Playlist".
     * Abre a tela para criação de nova playlist e fecha a tela atual.
     * 
     * @param evt evento de ação do botão
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        CriarPlaylistView criar = new CriarPlaylistView();
        criar.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Ação disparada ao clicar no botão "Menu".
     * Abre a tela do menu principal e fecha a tela atual.
     * 
     * @param evt evento de ação do botão
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    Menu menu = new Menu(); 
    menu.setVisible(true);

    this.dispose();       }//GEN-LAST:event_jButton3ActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}